graph TD
    %% ----- Main Flow Start -----
    A[Request received by gateway] --> B{Latency prediction flag enabled?};

    %% ----- "No" Path (Current Flow) -----
    subgraph Current Flow
        C[Pod saturations checked]
        D[Shed if necessary/sheddable]
        E[Scorers run to determine the best pod]
        F[Request forwarded to selected pod]
    end
    B -- No --> C;
    C --> D --> E --> F;

    %% ----- "Yes" Path (Proposed Flow) -----
    subgraph Proposed Flow
        G["For each pod: <br/>-Run Prefix cache scorer <br/>-Run latency prediction <br/>(via async call to ML Predictor)"]
        H["Evaluate pod saturations as a function of<br/>request SLO and latency predictions"]
        I{Any valid pods capable of meeting SLO?}

        %% ----- Sub-flow for SLO-Aware Scheduling Profile -----
        subgraph SLO-Aware Scheduling Profile
            J{Headroom Strategy?}
            K_lowest["Weighted draw from valid pods,<br/>favoring LOWEST positive headroom<br/>(with small chance for exploration)"]
            K_highest["Weighted draw from valid pods,<br/>favoring HIGHEST positive headroom<br/>(with small chance for exploration)"]
            
            L{Is request critical?}
            M["Weighted draw from ALL pods,<br/>favoring LOWEST negative headroom<br/>(least overwhelmed pod)"]
            N[Shed request]
        end

        %% ----- Connecting the main flow to the profile logic -----
        I -- Yes --> J;
        J -- "Lowest (Compact Packing)" --> K_lowest;
        J -- "Highest (Load Balancing)" --> K_highest;
        
        I -- No --> L;
        L -- Yes --> M;
        L -- No --> N;

        %% ----- Continue Main Flow after pod selection -----
        O["Store request with predicted<br/>(TFT/TPOST) in datastore"]
        P[Forward request to selected pod]
        Q["After response, send actual & predicted<br/>latencies to ML Trainer (via async call)"]
        R("async POST /add_training_data_bulk")
        
        %% ----- Connect profile outputs to the rest of the flow -----
        K_lowest --> O;
        K_highest --> O;
        M --> O;
        O --> P --> Q --> R;
    end
    B -- Yes --> G;
    G --> H --> I;
    R --> S;
    G -.->|"async GET/predict"| T;
    %% ----- Sidecar ML Modules and Async Connections -----
    subgraph Sidecar Modules
        S[ML Trainer]
        T[ML Predictor]
        S -- "continuous retraining loop <br/>(GET /download)" --> S;
        S -- "deploys new model" --> T;
    end
