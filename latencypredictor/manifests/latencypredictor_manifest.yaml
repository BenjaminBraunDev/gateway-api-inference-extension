# GKE Deployment YAML for the Latency Predictor Server
# Increased CPU, memory, and storage per your request.

# --- 1. ConfigMap ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: latency-predictor-config
  namespace: default
data:
  LATENCY_RETRAINING_INTERVAL_SEC: "1"
  LATENCY_MIN_SAMPLES_FOR_RETRAIN: "100"
  LATENCY_TTFT_MODEL_PATH: "/models/ttft.joblib"
  LATENCY_TPOT_MODEL_PATH: "/models/tpot.joblib"
  LATENCY_TTFT_SCALER_PATH: "/models/ttft_scaler.joblib"
  LATENCY_TPOT_SCALER_PATH: "/models/tpot_scaler.joblib"
  LATENCY_MODEL_TYPE: "xgboost"  # or "xgboost"
  

---
# --- 2. Deployment ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: latency-predictor-deployment
  namespace: default
  labels:
    app: latency-predictor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: latency-predictor
  template:
    metadata:
      labels:
        app: latency-predictor
    spec:
      nodeSelector:
        cloud.google.com/gke-nodepool: "pool-1"  
      containers:
      - name: latency-predictor-server
        image: us-docker.pkg.dev/kaushikmitra-gke-dev/kaushikmitra-docker-repo/latencypredictor:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000

        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 10

        resources:
          # Increased CPU & memory
          requests:
            cpu: "1000m"            # was 500m
            memory: "2Gi"           # was 512Mi
            #ephemeral-storage: "50Gi" # new: reserve 5Gi of scratch space
          limits:
            cpu: "2000m"            # was 1000m
            memory: "4Gi"           # was 1Gi
            #ephemeral-storage: "100Gi" # new: cap at 10Gi of scratch space

        envFrom:
        - configMapRef:
            name: latency-predictor-config

        volumeMounts:
        - name: model-storage
          mountPath: /models

      volumes:
      - name: model-storage
        emptyDir:
          sizeLimit: "100Gi"  # new: cap the emptyDir at 10Gi

---
# --- 3. Service ---
apiVersion: v1
kind: Service
metadata:
  name: latency-predictor-service
  namespace: default
spec:
  type: LoadBalancer
  selector:
    app: latency-predictor
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
